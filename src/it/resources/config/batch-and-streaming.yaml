app:
  name: TestBatchAndStreamJob
  enableHiveSupport: true
  sparkConf:
    spark.sql.adaptive.enabled: "true"
    spark.master: local
    spark.sql.warehouse.dir: ${OUTPUT_PATH}/stream/metastore_batch
  sparkContext:
    description: Integration test
    hadoopConfiguration:
      hive.default.fileformat: delta
      hive.default.fileformat.managed: delta
schemas:
  - id: schema_input_bs
    kind: schema-registry
    format: avro-schema
    options:
      schemaRegistryUrls: ${SCHEMA_REGISTRY_URL}
      subject: schema_input_bs
      id: "1"
  - id: schema_output_bs
    kind: schema-registry
    format: avro-schema
    options:
      schemaRegistryUrls: ${SCHEMA_REGISTRY_URL}
      id: "2"
  - id: schema_kafka_bs
    kind: schema-registry
    format: avro-schema
    options:
      schemaRegistryUrls: ${SCHEMA_REGISTRY_URL}
      subject: schema_kafka
inputs:
  - id: courses
    format: csv
    schema: schema_input_bs
    kind: batch
    subtype: data-source
    options:
      path: ${INPUT_PATH}
      inferSchema: "false"
      header: "true"
      mode: FAILFAST
  - id: courses_input_kafka_avro
    format: kafka
    kind: stream
    subtype: data-source
    options:
      kafka.bootstrap.servers: ${KAFKA_BOOTSTRAP_SERVERS}
      subscribe: ${KAFKA_TOPIC}
      startingOffsets: earliest
steps:
  - id: courses_ext
    kind: sql
    options:
      query: |
        select course_id, course_title, url, is_paid, price, num_subscribers, num_reviews, num_lectures,
        level, content_duration, published_timestamp, subject,
        cast(current_date() as string) as load_date from courses
    dq:
      analysis:
        name: courses_ext_analysis
        analyzers:
          compliance:
            instance: price
            predicate: "price > 100"
          completeness:
            column: course_id
          distinctness:
            columns:
              - course_id
          uniqueness:
            columns:
              - course_id
          uniqueValueRatio:
            columns:
              - course_id
          countDistinct:
            columns:
              - course_id
          entropy:
            column: content_duration
          mutualInformation:
            columns:
              - course_title
              - level
          maximum:
            column: num_lectures
          minimum:
            column: num_lectures
          maxLength:
            column: course_title
          minLength:
            column: course_title
          mean:
            column: price
          sum:
            column: num_subscribers
          size:
          dataType:
            column: level
      verification:
        name: courses_ext_dq
        checks:
          - level: error
            description: Basic DQ validation 1
            hasSize:
              op: ">"
              value: 1
          - level: warning
            description: Basic DQ validation 2
            isComplete:
              column: course_id
            isUnique:
              column: course_id
            isContainedIn:
              column: subject
              allowedValues:
                - Business Finance
                - Web Development
            isNonNegative:
              column: price
            isPositive:
              column: content_duration
            isLessThan:
              columnA: num_reviews
              columnB: num_subscribers
            isLessThanOrEqualTo:
              columnA: num_reviews
              columnB: num_subscribers
            isGreaterThan:
              columnA: num_reviews
              columnB: num_subscribers
            isGreaterThanOrEqualTo:
              columnA: num_reviews
              columnB: num_subscribers
            hasPattern:
              column: course_title
              pattern: "[A-Z]+.*"
            containsURL:
              column: url
  - id: courses_ext_struct
    kind: sql
    options:
      query: |
        select cast(course_id as string) as key, struct(course_id, course_title, url, is_paid, price, num_subscribers, num_reviews, num_lectures, level, content_duration, published_timestamp, subject, load_date) as struct_fields
        from courses_ext
  - id: courses_ext_kafka_avro
    kind: to-avro
    options:
      dataframe: courses_ext_struct
      columns: struct_fields
      alias: value
      schema: schema_output_bs
      select: key, value
  - id: courses_input_kafka_plain
    kind: from-avro
    options:
      dataframe: courses_input_kafka_avro
      columns: value
      alias: plain
      schema: schema_output_bs
      select: "plain.*"
  - id: courses_kafka_join
    kind: sql
    options:
      query: |
        select s.*
        from courses_input_kafka_plain as s, courses_ext as b
        where s.course_id == b.course_id
outputs:
  - id: courses_ext_kafka_avro
    format: kafka
    mode: append
    kind: batch
    subtype: data-source
    options:
      kafka.bootstrap.servers: ${KAFKA_BOOTSTRAP_SERVERS}
      topic: ${KAFKA_TOPIC}
  - id: courses_kafka_join
    format: parquet
    mode: append
    kind: stream
    subtype: data-source
    schema: schema_output_bs
    options:
      path: ${OUTPUT_PATH}/stream/courses_kafka_join
      header: "true"
      checkpointLocation: ${OUTPUT_PATH}/stream/checkpoint/courses_kafka_join
      gracefulShutdownPath: ${GRACEFUL_SHUTDOWN_PATH}
    dq:
      analysis:
        name: courses_ext_analysis
        analyzers:
          compliance:
            instance: price
            predicate: "price > 100"
          completeness:
            column: course_id
          distinctness:
            columns:
              - course_id
          uniqueness:
            columns:
              - course_id
          uniqueValueRatio:
            columns:
              - course_id
          countDistinct:
            columns:
              - course_id
          entropy:
            column: content_duration
          mutualInformation:
            columns:
              - course_title
              - level
          maximum:
            column: num_lectures
          minimum:
            column: num_lectures
          maxLength:
            column: course_title
          minLength:
            column: course_title
          mean:
            column: price
          sum:
            column: num_subscribers
          size:
          dataType:
            column: level
      verification:
        name: courses_ext_dq
        checks:
          - level: error
            description: Basic DQ validation 1
            hasSize:
              op: ">"
              value: 1
          - level: warning
            description: Basic DQ validation 2
            isComplete:
              column: course_id
            isUnique:
              column: course_id
            isContainedIn:
              column: subject
              allowedValues:
                - Business Finance
                - Web Development
            isNonNegative:
              column: price
            isPositive:
              column: content_duration
            isLessThan:
              columnA: num_reviews
              columnB: num_subscribers
            isLessThanOrEqualTo:
              columnA: num_reviews
              columnB: num_subscribers
            isGreaterThan:
              columnA: num_reviews
              columnB: num_subscribers
            isGreaterThanOrEqualTo:
              columnA: num_reviews
              columnB: num_subscribers
            hasPattern:
              column: course_title
              pattern: "[A-Z]+.*"
            containsURL:
              column: url
